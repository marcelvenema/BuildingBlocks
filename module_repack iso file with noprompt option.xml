<?xml version="1.0"?>
<!-- Ivanti Automation Building Blocks -->
<!-- Created by marcelvenema\administrator on 8/29/2018 2:01:00 PM -->
<AutomationManager>
	<buildingblock version="3.0" bbpwh="A9DkDz1CIG0zjewfO6f6Yw==:20000:1+UcoK14PSJnZK/f2H0RJ6gYd5oSUvnJzmKepa454J0=">
		<projects/>
		<modules>
			<module>
				<properties>
					<guid>{43524F57-4429-0000-4D56-7BAD7E6F4091}</guid>
					<name>Repack ISO file with noprompt option</name>
					<enabled>yes</enabled>
					<description>Repack WinPE ISO file to enable noprompt option.

Parameters:
MDT.ISOFOLDER - Path to folder where WinPE ISO file is stored. Please be sure to use trailing backslash, for example D:\ReferenceShare\Boot\
MDT.ISONAME - Name of WinPE ISO file, for example REF-MV001-DS1-x64.ISO

MarcelVenema</description>
					<version>1.0.28</version>
					<versioncomment>Updated version</versioncomment>
					<properties>
						<separators/>
					</properties>
					<folderpath>
						<folder>
							<name>Software</name>
							<description/>
							<guid>{3393D2A2-09C5-406F-ABF0-1FAE97D56707}</guid>
							<folder>
								<name>Microsoft</name>
								<description/>
								<guid>{99A9EBDF-1F61-4D45-BCAE-1B037E4F3900}</guid>
								<folder>
									<name>Microsoft Deployment Toolkit (MDT)</name>
									<description/>
									<guid>{12C645A7-E996-4AFC-95F3-42FD8642466B}</guid>
									<folder>
										<name>Maintenance</name>
										<description/>
										<guid>{6276CC19-35AF-4E97-AE6A-A1F1F523D47A}</guid>
									</folder>
								</folder>
							</folder>
						</folder>
					</folderpath>
					<deleteusedresources>yes</deleteusedresources>
				</properties>
				<tasks>
					<task hidden="yes">
						<limitinvoke>no</limitinvoke>
						<parameters>
							<param>
								<name>MDT.ISOFOLDER</name>
								<value1>D:\ReferenceShare\Boot\</value1>
								<value2/>
								<value3/>
								<type>0</type>
								<description>Path to folder where WinPE ISO file is stored. Please be sure to use trailing backslash, for example D:\ReferenceShare\Boot\
</description>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
							<param>
								<name>MDT.ISONAME</name>
								<value1>REF-MV001-DS1-x64.ISO</value1>
								<value2/>
								<value3/>
								<type>0</type>
								<description>Name of WinPE ISO file, for example REF-MV001-DS1-x64.ISO</description>
								<hint>Please provide the necessary input</hint>
								<selection/>
								<inputtiming>
									<importbb showprev="no" eraseprev="no">no</importbb>
									<schedulejob showprev="yes" eraseprev="no">yes</schedulejob>
								</inputtiming>
								<inputoptions>
									<confirm>no</confirm>
									<force>no</force>
									<required>no</required>
									<validation>no</validation>
								</inputoptions>
							</param>
						</parameters>
						<conditions>
							<condition guid="{4B429AE7-A931-4BFA-89DB-919910901806}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
							<condition guid="{0E2D9ED8-0A9B-4299-B3CB-58AC88AF2CA9}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
							<condition guid="{BEA62623-10ED-42A6-B066-C556EC6A445D}">
								<expressions/>
								<operator>AND</operator>
								<actiontrue>3</actiontrue>
								<when>0</when>
								<action>3</action>
								<enabled>yes</enabled>
							</condition>
						</conditions>
						<variablescontainer></variablescontainer>
					</task>
					<task>
						<properties>
							<type>FILEOPERATIONS</type>
							<guid>{BEA62623-10ED-42A6-B066-C556EC6A445D}</guid>
							<description>Perform single file operation</description>
							<enabled>yes</enabled>
							<comments>Delete %TMP%\ISO folder</comments>
							<onerror>fail</onerror>
							<ignore_errors>yes</ignore_errors>
						</properties>
						<settings>
							<fileoperationtask>
								<type>delete</type>
								<sourcelocation>%TMP%\ISO</sourcelocation>
								<parameters/>
							</fileoperationtask>
						</settings>
					</task>
					<task>
						<properties>
							<type>PWRSHELL</type>
							<guid>{4B429AE7-A931-4BFA-89DB-919910901806}</guid>
							<description>Execute Windows PowerShell Script</description>
							<enabled>yes</enabled>
							<comments>Repack ISO file</comments>
							<onerror>fail</onerror>
						</properties>
						<settings>
							<username/>
							<password encrypted="yes">{015d45e3-c3ab-45e8-98e2-941328a099c8;s=00059;v=1;m=aes256}RQoqvB/j1CIVKb6klkWZKD4JTWqqzBONz6LG8nydRGQ=</password>
							<usescript>yes</usescript>
							<source># Repack ISO to disable 'press any key' function

$ISOfolder = "$[MDT.ISOFOLDER]"
$ISOname = "$[MDT.ISONAME]"

Write-Host "Detect OSCDIMG.EXE..."
$oscdimg = Get-ChildItem -Path "c:\" -Filter "OSCDIMG.EXE" -Recurse -ErrorAction SilentlyContinue -Force | % { $_.FullName } | Select-String -Pattern "amd64"
Write-Host "oscdimg: $oscdimg"
$oscdimgfolder = Split-Path $oscdimg -Parent
If ($oscdimg -eq "") {
   Write-Host "Warning! Not found..."
}
Else
{
   Write-Host "OK..."
}
$etfsboot = "$oscdimgfolder\etfsboot.com"
$efisys = "$oscdimgfolder\efisys_noprompt.bin"

# Mount ISO 
Write-Host "Mount ISO file $Isoname on folder $ISOfolder..."
$ISO = "$ISOFolder$ISOname"
Mount-DiskImage -ImagePath $ISO -StorageType ISO -Passthru -Verbose

# Get drive letter
$driveletter = (Get-DiskImage -ImagePath $ISO | Get-Volume).DriveLetter + ":"

# Copy files
$folder = "%TMP%\ISO\"
If (!(Test-Path $folder)) {
   New-Item -Type Directory -Path $folder
}
Copy-Item $driveletter\* $folder -Force -Recurse

# Unmount ISO
Write-Host "Unmount ISO..."
Dismount-DiskImage -ImagePath $ISO -Verbose

# Remove read-only attributes
Get-ChildItem $folder -Recurse | %{ if (! $_.psiscontainer) { $_.isreadonly = $false}}

Write-Host "Repacking to %TMP%\$[MDT.ISONAME]..."
$bootdata = '2#p0,e,b"{0}"#pEF,e,b"{1}"' -f $etfsboot, $efisys
Write-Host "bootdata: $bootdata"
Write-Host "folder: $folder"
Write-Host "oscdimg: $oscdimg"
Start-Process $oscdimg -args @("-bootdata:$bootdata",'-m', '-o', '-u2','-udfver102', $folder, '%TMP%\WinPE.ISO') -wait -nonewwindow</source>
							<scriptext>ps1</scriptext>
							<outputwidth>16386</outputwidth>
							<timeout>10</timeout>
							<terminate>no</terminate>
							<snapins/>
							<overrideexecutionpolicy>no</overrideexecutionpolicy>
							<usex86psonx64>no</usex86psonx64>
						</settings>
					</task>
					<task>
						<properties>
							<type>FILEOPERATIONS</type>
							<guid>{0E2D9ED8-0A9B-4299-B3CB-58AC88AF2CA9}</guid>
							<description>Perform single file operation</description>
							<enabled>yes</enabled>
							<comments>Copy ISO to original location</comments>
							<onerror>fail</onerror>
							<ignore_errors>yes</ignore_errors>
						</properties>
						<settings>
							<fileoperationtask>
								<type>copy</type>
								<sourcelocation>%TMP%\WinPE.ISO</sourcelocation>
								<destinationlocation>$[MDT.ISOFOLDER]$[MDT.ISONAME]</destinationlocation>
								<parameters/>
							</fileoperationtask>
						</settings>
					</task>
				</tasks>
			</module>
		</modules>
		<resources/>
		<runbooks/>
		<teams/>
		<projectfolders/>
		<modulefolders/>
		<resourcefolders/>
		<runbookfolders/>
		<teamfolders/>
	</buildingblock>
</AutomationManager>
